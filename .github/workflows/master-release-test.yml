name: Master Test CI

on:
  push:
    branches: 
      - 'master-release-test'

jobs:
  build_all:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1
      
    - name: Build
      run: dotnet build --configuration Release
  
  generate_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versionprovider.outputs.version }}
    
    steps:
    # The maximum value for either of the parts is 65534 - https://stackoverflow.com/a/37941296/11649486
    - name: Generate version and save it to file
      id: versionprovider
      shell: bash
      run: |
        echo "::set-output name=version::$(date -u +%Y.%m.%d.%k%M)"

  build_each:
    runs-on: ubuntu-latest
    needs: [build_all, generate_version]
    
    strategy:
      fail-fast: true
      matrix:
        project: 
        - "CoreFramework.Base"
        - "CoreFramework.Config"
        - "CoreFramework.Config.Json" 
        - "CoreFramework.Config.Yaml" 
        - "CoreFramework.CrashLogging"
        - "CoreFramework.Logging"
    
    steps:    
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1
            
    - name: Pack
      working-directory: ${{ matrix.project }}
      run: |
        dotnet pack --configuration Release -p:PackageVersion=${{ needs.generate_version.outputs.version }}-dev -p:AssemblyVersion=${{ needs.generate_version.outputs.version }} -p:PathMap="$GITHUB_WORKSPACE=/" -p:ContinuousIntegrationBuild=true
            
    - name: Find nupkg file
      id: nupkgvar
      working-directory: ${{ matrix.project }}/bin/Release
      run: files=( *.nupkg) && echo ::set-output name=filename::$(echo "${files[0]}")
      
    - name: Upload nupkg - Upload asset
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.nupkgvar.outputs.filename }}
        path: ${{ matrix.project }}/bin/Release/${{ steps.nupkgvar.outputs.filename }}
        
    - name: Find snupkg file
      id: snupkgvar
      working-directory: ${{ matrix.project }}/bin/Release
      run: files=( *.snupkg) && echo ::set-output name=filename::$(echo "${files[0]}")
      
    - name: Upload snupkg - Upload asset
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.snupkgvar.outputs.filename }}
        path: ${{ matrix.project }}/bin/Release/${{ steps.snupkgvar.outputs.filename }}
      
    - name: Release - Upload nupkg (includes snupkg) to nuget.org
      working-directory: ${{ matrix.project }}/bin/Release
      run: dotnet nuget push ${{ steps.nupkgvar.outputs.filename }} -k ${{ secrets.NUGET_KEY }} -s https://api.nuget.org/v3/index.json
