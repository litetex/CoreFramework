name: Develop CI

on:
  push:
    branches: 
      - 'develop'

jobs:
  build_all:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201
      
    - name: Build
      run: dotnet build --configuration Release

  build_each:
    runs-on: ubuntu-latest
    needs: [build_all]
    
    strategy:
      fail-fast: true
      matrix:
        project: 
        - "CoreFramework.Base"
        - "CoreFramework.Config"
        - "CoreFramework.Config.Json" 
        - "CoreFramework.Config.Yaml" 
        - "CoreFramework.CrashLogging"
        - "CoreFramework.Logging"
    
    steps:    
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201
      
    - name: Build
      working-directory: ${{ matrix.project }}
      run: dotnet build --configuration Release
      
    - name: Pack
      working-directory: ${{ matrix.project }}
      run: dotnet pack --configuration Release -p:VersionSuffix=dev
            
    - name: Find nupkg file
      id: nupkgvar
      working-directory: ${{ matrix.project }}/bin/Release
      run: files=( *.nupkg) && echo ::set-output name=filename::$(echo "${files[0]}")
      
    - name: Upload nupkg - Upload asset
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ steps.nupkgvar.outputs.filename }}
        path: ${{ matrix.project }}/bin/Release/${{ steps.nupkgvar.outputs.filename }}
        
    - name: Find snupkg file
      id: snupkgvar
      working-directory: ${{ matrix.project }}/bin/Release
      run: files=( *.snupkg) && echo ::set-output name=filename::$(echo "${files[0]}")
      
    - name: Upload snupkg - Upload asset
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ steps.snupkgvar.outputs.filename }}
        path: ${{ matrix.project }}/bin/Release/${{ steps.snupkgvar.outputs.filename }}
